
SELECT
	retailer_uid,
	k.distributor_id as distributor,
	COALESCE( item_id,
	c_dist_item_code ) as item_id,
	k.n,
	sch.*
from
	(
	select
		*
	from
		(
		--Adds a col with nos 1 to 5 ro each customer
 WITH tab( n ) as (
		SELECT
			1 as n
	UNION ALL
		SELECT
			2 as n
	UNION ALL
		SELECT
			3 as n
	UNION ALL
		SELECT
			4 as n
	UNION ALL
		SELECT
			5 as n )
		SELECT
			*
		FROM
			(
			select
				DISTINCT fk_retailer_master_id as retailer_uid,
				dist_id as distributor_id
			from
				(
				select
					DISTINCT item_id,
					scheme_batch ,
					dist_id ,
					fk_retailer_master_id
				from
					(
					select
						n_balance_qty,
						l1.c_item_code as item_id ,
						l1.n_distributor_id as dist_id,
						l1.c_batch_no as scheme_batch,
						top_cust,
						sman_name,
						no_of_schemes,
						fk_retailer_master_id
						-- /,sch.d_date as scheme_date,sch.qty as scheme_qty,sch.free_qty as scheme_free_qty 
					from
						(
						-- To get schems for items with top 10 customers and no of schemes per item
						select
							n_balance_qty,
							scheme.c_batch_no,
							c_item_code,
							scheme.n_distributor_id ,
							top_item,
							top_cust,
							top_dist_id ,
							ROW_NUMBER() over ( PARTITION by scheme.n_distributor_id,
							scheme.c_item_code,
							top_cust
						order by
							n_balance_qty DESC ) as no_of_schemes
						from
							(
							-- to get items with schemes with considerable stock
							SELECT
								DISTINCT n_balance_qty,
								sch.c_batch_no,
								c_item_code,
								sch.n_distributor_id
							from
								level1.stock_day_end stock
							INNER join level1.schemes sch on
								sch.c_batch_no = stock.c_batch_no
								and SCH.n_distributor_id = STOCK.n_distributor_id
								and stock.c_dist_item_code = sch.c_item_code
							where
								STOCK.d_date = CURRENT_DATE-2
								AND STOCK.n_distributor_id IN ( 2,
								5,
								6 )
								and n_balance_qty>10 * qty
								and sch.d_date>CURRENT_DATE-11 ) scheme
						INNER join (
							select
								*
							from
								(
								-- To get top 10 customers with retailer information
								select
									n_distributor_id as top_dist_id,
									c_dist_item_code as top_item,
									c_dist_cust_code as top_cust ,
									sum( n_total_qty ) as top_qty,
									ROW_NUMBER() over ( PARTITION by n_distributor_id,
									c_dist_item_code
								order by
									sum( n_total_qty ) DESC ) as top10
								from
									level1.sales s1
								inner join level1.retailer_sman rsm on
									s1.c_dist_cust_code = rsm.code
									AND S1.n_distributor_id = rsm.distributor_id
								where
									rsm.sman_name not like '%DIRECT%'
									and rsm.sman_name not LIKE '%DIALHEALTH%'
									and sman_name is not NULL
									and dt_time>CURRENT_DATE-90
									and n_distributor_id in ( 2,
									5,
									6 )
									and is_internal = 0
									and is_claimable = 0
								GROUP by
									1,
									2,
									3
								having
									sum( n_total_qty )>10 ) sales
							Where
								top10<11 ) sales ON
							scheme.n_distributor_id = sales.top_dist_id
							AND scheme.c_item_code = sales.top_item ) l1
					left join (
						select
							s3.*,
							sman_name
							-- ,sm1.c_batch_no,o1.dt_ord_time
						from
							(
							-- to check whether the customer has taken a scheme or discount in last 90 days
							Select
								sm.n_distributor_id,
								sm.c_dist_cust_code,
								sm.c_dist_item_code ,
								sum( sm.n_qty ) AS n_qty,
								sum( sm.n_sch_qty ) as n_sch_qty,
								sum( sm.n_sch_disc_per ) as n_sch_disc_per
							from
								level1.sales sm
							where
								dt_time::date >= CURRENT_DATE-90
								and n_distributor_id in ( 2,
								5,
								6 )
								and is_internal = 0
								and is_claimable = 0
							group by
								1,
								2,
								3
							having
								( sum( n_sch_qty )+ sum( n_sch_disc_per ))>0 ) s3
						left join level1.retailer_sman rsm on
							s3.n_distributor_id = rsm.distributor_id
							and s3.c_dist_cust_code = rsm.code
						where
							rsm.sman_name not like '%DIRECT%'
							and rsm.sman_name not LIKE '%DIALHEALTH%'
							and sman_name is not NULL ) s4 on
						l1.c_item_code = s4.c_dist_item_code
						and top_cust = s4.c_dist_cust_code
						and top_dist_id = s4.n_distributor_id
					left join mdm_master.retailer_distributor_mapping rdm on
						rdm.distributors_retailer_code = top_cust
						and rdm.fk_distributor_master_id = top_dist_id
						AND rdm.is_active = 'Y' 
						)
				where
					sman_name is NULL
					and no_of_schemes = 1
					and fk_retailer_master_id is not NULL ) ),
			tab ) a1
	left join (
		select
			fk_retailer_master_id,
			dist_id,
			item_id,
			ROW_NUMBER() over ( PARTITION by dist_id,
			fk_retailer_master_id ) as no_of_items 
		from
			(
			select
				DISTINCT item_id
				--, top_cust 
,
				scheme_batch ,
				dist_id ,
				fk_retailer_master_id
			from
				(
				select
					n_balance_qty,
					l1.c_item_code as item_id ,
					l1.n_distributor_id as dist_id,
					l1.c_batch_no as scheme_batch,
					top_cust,
					sman_name,
					no_of_schemes,
					fk_retailer_master_id
					-- /,sch.d_date as scheme_date,sch.qty as scheme_qty,sch.free_qty as scheme_free_qty 
				from
					(
					-- To get schems for items with top 10 customers and no of schemes per item
					select
						n_balance_qty,
						scheme.c_batch_no,
						c_item_code,
						scheme.n_distributor_id ,
						top_item,
						top_cust,
						top_dist_id ,
						ROW_NUMBER() over ( PARTITION by scheme.n_distributor_id,
						scheme.c_item_code,
						top_cust
					order by
						n_balance_qty DESC ) as no_of_schemes
					from
						(
						-- to get items with schemes with considerable stock
						SELECT
							DISTINCT n_balance_qty,
							sch.c_batch_no,
							c_item_code,
							sch.n_distributor_id
						from
							level1.stock_day_end stock
						INNER join level1.schemes sch on
							sch.c_batch_no = stock.c_batch_no
							and SCH.n_distributor_id = STOCK.n_distributor_id
							and stock.c_dist_item_code = sch.c_item_code
						where
							STOCK.d_date = CURRENT_DATE-2
							AND STOCK.n_distributor_id IN ( 2,
							5,
							6 )
							and n_balance_qty>10 * qty
							and sch.d_date>CURRENT_DATE-11 ) scheme
					INNER join (
						select
							*
						from
							(
							-- To get top 10 customers with retailer information
							select
								n_distributor_id as top_dist_id,
								c_dist_item_code as top_item,
								c_dist_cust_code as top_cust ,
								sum( n_total_qty ) as top_qty,
								ROW_NUMBER() over ( PARTITION by n_distributor_id,
								c_dist_item_code
							order by
								sum( n_total_qty ) DESC ) as top10
							from
								level1.sales s1
							inner join level1.retailer_sman rsm on
								s1.c_dist_cust_code = rsm.code
								AND S1.n_distributor_id = rsm.distributor_id
							where
								rsm.sman_name not like '%DIRECT%'
								and rsm.sman_name not LIKE '%DIALHEALTH%'
								and sman_name is not NULL
								and dt_time>CURRENT_DATE-90
								and n_distributor_id in ( 2,
								5,
								6 )
								and is_internal = 0
								and is_claimable = 0
							GROUP by
								1,
								2,
								3
							having
								sum( n_total_qty )>10 ) sales
						Where
							top10<11 ) sales ON
						scheme.n_distributor_id = sales.top_dist_id
						AND scheme.c_item_code = sales.top_item ) l1
				left join (
					select
						s3.*,
						sman_name
						-- ,sm1.c_batch_no,o1.dt_ord_time
					from
						(
						-- to check whether the customer has taken a scheme or discount in last 90 days
						Select
							sm.n_distributor_id,
							sm.c_dist_cust_code,
							sm.c_dist_item_code ,
							sum( sm.n_qty ) AS n_qty,
							sum( sm.n_sch_qty ) as n_sch_qty,
							sum( sm.n_sch_disc_per ) as n_sch_disc_per
						from
							level1.sales sm
						where
							dt_time::date >= CURRENT_DATE-90
							and n_distributor_id in ( 2,
							5,
							6 )
							and is_internal = 0
							and is_claimable = 0
						group by
							1,
							2,
							3
						having
							( sum( n_sch_qty )+ sum( n_sch_disc_per ))>0 ) s3
					left join level1.retailer_sman rsm on
						s3.n_distributor_id = rsm.distributor_id
						and s3.c_dist_cust_code = rsm.code
					where
						rsm.sman_name not like '%DIRECT%'
						and rsm.sman_name not LIKE '%DIALHEALTH%'
						and sman_name is not NULL ) s4 on
					l1.c_item_code = s4.c_dist_item_code
					and top_cust = s4.c_dist_cust_code
					and top_dist_id = s4.n_distributor_id
				left join mdm_master.retailer_distributor_mapping rdm on
					rdm.distributors_retailer_code = top_cust
					and rdm.fk_distributor_master_id = top_dist_id
					AND rdm.is_active = 'Y' 
					)
			where
				sman_name is NULL
				and no_of_schemes = 1
				and fk_retailer_master_id is not NULL
				)
				)a2
				on
		a1.retailer_uid = a2.fk_retailer_master_id
		and a1.distributor_id = a2.dist_id
		and a1.n = a2.no_of_items
	left join (
		-- To get top 5 items with schemes and stock for diff dists
		SELECT
			n_distributor_id,
			sale_rank,
			c_dist_item_code,
			6-sale_rank as final_rank
		FROM
			(
			SELECT
				s.n_distributor_id ,
				s.c_dist_item_code ,
				sum( n_sale_amt )::INT ,
				ROW_NUMBER() OVER ( PARTITION BY s.n_distributor_id
			ORDER BY
				sum( n_sale_amt ) desc ) as sale_rank
			FROM
				level1.sales s
			JOIN (
				SELECT
					DISTINCT sc.n_distributor_id,
					sc.c_item_code
				FROM
					level1.schemes sc
				WHERE
					sc.d_date >= CURRENT_DATE-60 ) sc ON
				sc.c_item_code = s.c_dist_item_code
				AND sc.n_distributor_id = s.n_distributor_id
			JOIN (
				SELECT
					n_distributor_id,
					c_dist_item_code,
					sum( n_balance_qty ) bal_qty
				FROM
					level1.stock_day_end sde
				WHERE
					d_date = CURRENT_DATE-2
				GROUP BY
					1,
					2
				HAVING
					bal_qty>50 ) sde ON
				s.c_dist_item_code = sde.c_dist_item_code
				AND s.n_distributor_id = sde.n_distributor_id
			WHERE
				is_claimable = 0
				AND is_internal = 0
				AND s.dt_time::DATE > CURRENT_DATE-91
				AND s.n_distributor_id IN ( 2,
				5,
				6 )
			GROUP BY
				1,
				2 )
		WHERE
			sale_rank < 6 ) a3 on
		a1.distributor_id = a3.n_distributor_id
		and a2.fk_retailer_master_id is NULL
		and a1.n = a3.final_rank ) k
left join (
	select
		*
	from
		(
		SELECT
			sch.*,
			stk.n_balance_qty,
			ROW_NUMBER() over ( PARTITION by c_dist_item_code
		order by
			stk.n_balance_qty DESC ) as no_of_schemes
		from
			pharmassist.scheme_mst sch
		join level1.stock_day_end stk on
			sch.c_batch_no = stk.c_batch_no
			and sch.c_item_code = stk.c_dist_item_code
			and sch.distributor_id = stk.n_distributor_id
		where
			stk.d_date = CURRENT_DATE-2 )
	where
		no_of_schemes = 1 ) sch on
	COALESCE( item_id,
	c_dist_item_code ) = sch.c_item_code
	and k.distributor_id = sch.distributor_id
 
